# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-20.04'
strategy:
  matrix:
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.text
  displayName: 'Install dependencies $(python.version)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'silamoney'
    scannerMode: 'CLI'
    configMode: 'file'
  displayName: 'Prepare Sonar analysis'
  condition: and(succeeded(), eq(variables['executeSonar'], true))

- script: |
    pip install coverage unittest-xml-reporting
    python test_suite.py
  displayName: 'test $(python.version)'
  env:
    SILA_PRIVATE_KEY: $(silaPrivateKey)

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-*.xml'
  displayName: 'Publish test results $(python.version)'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.xml'
  displayName: 'Publish code coverage $(python.version)'
  condition: succeededOrFailed()

- task: SonarCloudAnalyze@1
  condition: and(succeededOrFailed(), eq(variables['executeSonar'], true))

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  condition: and(succeeded(), eq(variables['executeSonar'], true))
